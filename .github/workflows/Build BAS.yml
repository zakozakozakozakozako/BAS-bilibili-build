name: Video → SVG → BAS Danmaku

on:
  workflow_dispatch:
    inputs:
      video_file:
        description: '视频文件名（仓库根目录，或用下方artifact名称下载）'
        required: true
        default: 'input.mp4'
      artifact_name:
        description: '（可选）若视频不在仓库，填写Artifact名称以下载'
        required: false
      fps:
        description: '抽帧帧率'
        required: true
        default: '30'
      width:
        description: 'BAS 画布宽（-w）'
        required: true
        default: '4000'
      height:
        description: 'BAS 画布高（-h）'
        required: true
        default: '3620'
      maxsize:
        description: '每个TXT最大弹幕数（-–maxsize）'
        required: true
        default: '3000'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 下载 artifact (可选)
        if: ${{ github.event.inputs.artifact_name != '' }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.inputs.artifact_name }}
          path: .

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg potrace imagemagick
          npm install jsdom commander cli-progress ora

      - name: 抽帧 PNG
        run: |
          mkdir -p frames
          ffmpeg -i "${{ github.event.inputs.video_file }}" -vf fps=${{ github.event.inputs.fps }} frames/frame_%05d.png

      - name: PNG → SVG
        run: |
          node 2-批量转换svg.js -d frames -o svgs -c 4

      - name: SVG → JSON
        run: |
          node 3-批量转换json.js -d svgs -o svgjson -s 1

      - name: JSON → BAS TXT
        run: |
          node 4-json数据转换bas弹幕.js \
            -i svgjson -o bas_output \
            -w ${{ github.event.inputs.width }} \
            -h ${{ github.event.inputs.height }} \
            --fps ${{ github.event.inputs.fps }} \
            --maxsize ${{ github.event.inputs.maxsize }} \
            --starttime 0

      - name: 上传输出结果
        uses: actions/upload-artifact@v4
        with:
          name: bas_output
          path: bas_output